 #
 # This list of algorithms should be generated by a script which checks the filesystem for installs.
 # It shouldn't be changed by mere mortals. (alternatively, we could add a path to executable for each algorithm
 # in the list to reduce the number of assumptions of the program at the cost of making the config a little more involved)
 # Each algorithm has an 'include' parameter. By toggling 'include' to true/false the user can change
 # which algorithms are run in a given experiment.
 #
 # algorithm-specific parameters are embedded in lists so that users can specify multiple. If multiple
 # parameters are specified then the algorithm will be run as many times as needed to cover all parameter
 # combinations. For instance if we have the following:
 # - name: "myAlg"
 #   params:
 #         include: true
 #         a: [1,2]
 #         b: [0.5,0.75]
 #
 # then myAlg will be run on (a=1,b=0.5),(a=1,b=0.75),(a=2,b=0.5), and (a=2,b=0,75). Pretty neat, but be
 # careful: too many parameters might make your runs take a long time.

 algorithms:
        - name: "pathlinker"
          params:
                include: false
                directed: true
                run1:
                    k: [100,200]

        - name: "omicsintegrator1"
          params:
                include: true
                directed: false
                run1:
                    r: [5]
                    b: [5]
                    w: [1,5]
                    g: [3]
                    d: [10]

        - name: "omicsintegrator2"
          params:
                include: true
                directed: false
                run1:
                    b: [5]
                    g: [3]

 # Here we specify which pathways to run and other file location information.
 # DataLoader.py can currently only load a single dataset
 datasets:
     -
       label: wnt
       #node_files: ["node-prizes.txt", "sources.txt", "targets.txt"]
       node_files: ["sources.wnt.txt", "targets.wnt.txt"]
       # DataLoader.py can currently only load a single edge file, which is the primary network
       edge_files: ["np-union.txt"]
       # Placeholder
       other_files: []
       ground_truth_files: ["wnt-edges.txt", "wnt-nodes.txt"]
       # Relative path from the spras directory
       #data_dir: "input"
       data_dir: "input/netpath-nets"
     -
       label: bcr
       # Reuse some of the same sources file as 'data0' but different network and targets
       #node_files: ["sources.txt", "alternative-targets.txt"]
       node_files: ["sources.bcr.txt", "targets.bcr.txt"]
       edge_files: ["np-union.txt"]
       other_files: []
       ground_truth_files: ["bcr-edges.txt", "bcr-nodes.txt"]
       # Relative path from the spras directory
       #data_dir: "input"
       data_dir: "input/netpath-nets"

 # If we want to reconstruct then we should set run to true.
 reconstruction_settings:

         #set where everything is saved
         locations:

                #place the save path here
                reconstruction_dir: "output"

         run: true

 #Do we want to augment our reconstructions
 augmentation_settings:

         #save locations
         locations:
                 reconstruction_dir: "/path/to/save"

         PRAUG:

                 run: true

         ensemble:

                 run: false
                 rule: "Intersection"


 evaluation_settings:

         locations:
                 reconstruction_dir: "/path/to/reconstructions"

         PR:
                 compute: true

                 #the open-world assumption is the denial that being unannotated is to be not in the pathway.
                 #it allows for sub-sampling of negatives.

                 open_word: true

                 #in the case that we use the open-world assumption, we need to tell the program how to negatives.
                 #The options here are "fixed" or "random". In the case that "fixed" is selected the program will use
                 #negative values picked by the authors of this software. If "random" is chosen, the program will sample
                 #from unannotated interactions/proteins at a rate of 50 negatives to every positive.

                 negative_set: "fixed"

                 ##ARCOMMENT - let the above variable be "all" or "subsample". Then have a
                 ##subsample rate be set.
                 subsample_rate: 50

                 negative_set: "fixed"




 #Plotting
 plot_settings:
         locations:
                 reconstruction_dir: "/path/to/reconstructions"

                 plot_dir: "/path/to/plots"
         plots:

                - name: "example_plot_1"
                  type: "PR"
                  #where panel determines whether many subfigures are used or just 1.
                  #      fmax determines whether to display fmax in the legend
                  #      edge determines whether to plot edge PR or node PR
                  params: ["panel=True","fmax=True","edge=True"]

 analysis:
        summary:

          include: true

        graphspace:

          include: true
